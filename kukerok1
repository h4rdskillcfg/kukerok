<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ö—É–∫–µ—Ä–æ</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 600px;
            margin: 50px auto;
            padding: 20px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }
        .container {
            background: rgba(255, 255, 255, 0.1);
            padding: 30px;
            border-radius: 15px;
            backdrop-filter: blur(10px);
        }
        .upload-area {
            border: 2px dashed #fff;
            padding: 40px;
            text-align: center;
            border-radius: 10px;
            margin: 20px 0;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        .upload-area:hover {
            background: rgba(255, 255, 255, 0.1);
        }
        .preview {
            max-width: 200px;
            max-height: 200px;
            border-radius: 50%;
            margin: 20px auto;
            display: block;
        }
        button {
            background: linear-gradient(45deg, #00b894, #00cec9);
            color: white;
            border: none;
            padding: 15px 30px;
            border-radius: 10px;
            font-size: 16px;
            cursor: pointer;
            margin: 10px;
        }
        button:hover {
            transform: translateY(-2px);
        }
        .instructions {
            background: rgba(255, 255, 255, 0.1);
            padding: 20px;
            border-radius: 10px;
            margin: 20px 0;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>–ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ö—É–∫–µ—Ä–æ</h1>
        
        <div class="instructions">
            <h3>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:</h3>
            <ol>
                <li>–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ö—É–∫–µ—Ä–æ (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–µ, 200x200 –ø–∏–∫—Å–µ–ª–µ–π)</li>
                <li>–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –ø–æ–∫–∞–∂–µ—Ç, –∫–∞–∫ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂</li>
                <li>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–æ–¥ –Ω–∏–∂–µ –≤ –≤–∞—à index.html</li>
            </ol>
        </div>
        
        <div class="upload-area" onclick="document.getElementById('fileInput').click()">
            <p>–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ö—É–∫–µ—Ä–æ</p>
            <input type="file" id="fileInput" accept="image/*" style="display: none;" onchange="previewImage(this)">
        </div>
        
        <img id="preview" class="preview" style="display: none;">
        
        <div id="codeOutput" style="display: none;">
            <h3>–ö–æ–¥ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –≤ index.html:</h3>
            <pre style="background: rgba(0,0,0,0.3); padding: 15px; border-radius: 5px; overflow-x: auto;">
&lt;div class="character-image"&gt;
    &lt;img src="kukero-image.png" alt="–ö—É–∫–µ—Ä–æ" style="width: 60px; height: 60px; border-radius: 50%; object-fit: cover;"&gt;
&lt;/div&gt;</pre>
            
            <p><strong>–ù–µ –∑–∞–±—É–¥—å—Ç–µ:</strong></p>
            <ul>
                <li>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞–∫ "kukero-image.png" –≤ –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞</li>
                <li>–£–¥–∞–ª–∏—Ç—å –∏–ª–∏ –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä–æ–∫—É —Å —ç–º–æ–¥–∑–∏: &lt;div class="placeholder"&gt;üêπ&lt;/div&gt;</li>
            </ul>
        </div>
        
        <button onclick="downloadImage()">–°–∫–∞—á–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ</button>
        <button onclick="resetPreview()">–°–±—Ä–æ—Å–∏—Ç—å</button>
    </div>
    
    <script>
        function previewImage(input) {
            const file = input.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    const preview = document.getElementById('preview');
                    preview.src = e.target.result;
                    preview.style.display = 'block';
                    document.getElementById('codeOutput').style.display = 'block';
                }
                reader.readAsDataURL(file);
            }
        }
        
        function downloadImage() {
            const preview = document.getElementById('preview');
            if (preview.src) {
                const link = document.createElement('a');
                link.download = 'kukero-image.png';
                link.href = preview.src;
                link.click();
            }
        }
        
        function resetPreview() {
            document.getElementById('preview').style.display = 'none';
            document.getElementById('codeOutput').style.display = 'none';
            document.getElementById('fileInput').value = '';
        }
    </script>
</body>
</html> 
